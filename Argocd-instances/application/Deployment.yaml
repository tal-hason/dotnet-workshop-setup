kind: Deployment
apiVersion: apps/v1
metadata:
  annotations:
    alpha.image.policy.openshift.io/resolve-names: '*'
    app.openshift.io/route-disabled: 'false'
    app.openshift.io/vcs-ref: ''
    app.openshift.io/vcs-uri: 'https://github.com/tal-hason/dotnet-app.git'
    deployment.kubernetes.io/revision: '10'
    image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"dotnet-app:latest","namespace":"dotnet-app"},"fieldPath":"spec.template.spec.containers[?(@.name==\"dotnet-app\")].image","pause":"false"}]'
    openshift.io/generated-by: OpenShiftWebConsole
  resourceVersion: '200040'
  name: dotnet-app
  uid: 9b099d80-29e8-41e5-bcd6-8867e183ce98
  creationTimestamp: '2024-05-06T11:37:11Z'
  generation: 10
  managedFields:
    - manager: Mozilla
      operation: Update
      apiVersion: apps/v1
      time: '2024-05-06T12:14:44Z'
      fieldsType: FieldsV1
      fieldsV1:
        'f:metadata':
          'f:annotations':
            .: {}
            'f:alpha.image.policy.openshift.io/resolve-names': {}
            'f:app.openshift.io/route-disabled': {}
            'f:app.openshift.io/vcs-ref': {}
            'f:app.openshift.io/vcs-uri': {}
            'f:image.openshift.io/triggers': {}
            'f:openshift.io/generated-by': {}
          'f:labels':
            .: {}
            'f:app': {}
            'f:app.kubernetes.io/component': {}
            'f:app.kubernetes.io/instance': {}
            'f:app.kubernetes.io/name': {}
            'f:app.kubernetes.io/part-of': {}
        'f:spec':
          'f:progressDeadlineSeconds': {}
          'f:replicas': {}
          'f:revisionHistoryLimit': {}
          'f:selector': {}
          'f:strategy':
            'f:rollingUpdate':
              .: {}
              'f:maxSurge': {}
              'f:maxUnavailable': {}
            'f:type': {}
          'f:template':
            'f:metadata':
              'f:labels':
                .: {}
                'f:app': {}
                'f:deployment': {}
            'f:spec':
              'f:containers':
                'k:{"name":"dotnet-app"}':
                  .: {}
                  'f:env':
                    .: {}
                    'k:{"name":"PORT"}':
                      .: {}
                      'f:name': {}
                      'f:value': {}
                  'f:imagePullPolicy': {}
                  'f:name': {}
                  'f:resources': {}
                  'f:terminationMessagePath': {}
                  'f:terminationMessagePolicy': {}
              'f:dnsPolicy': {}
              'f:restartPolicy': {}
              'f:schedulerName': {}
              'f:securityContext': {}
              'f:terminationGracePeriodSeconds': {}
    - manager: kubectl-patch
      operation: Update
      apiVersion: apps/v1
      time: '2024-05-06T12:50:52Z'
      fieldsType: FieldsV1
      fieldsV1:
        'f:spec':
          'f:template':
            'f:spec':
              'f:containers':
                'k:{"name":"dotnet-app"}':
                  'f:image': {}
    - manager: kube-controller-manager
      operation: Update
      apiVersion: apps/v1
      time: '2024-05-06T12:50:55Z'
      fieldsType: FieldsV1
      fieldsV1:
        'f:metadata':
          'f:annotations':
            'f:deployment.kubernetes.io/revision': {}
        'f:status':
          'f:availableReplicas': {}
          'f:conditions':
            .: {}
            'k:{"type":"Available"}':
              .: {}
              'f:lastTransitionTime': {}
              'f:lastUpdateTime': {}
              'f:message': {}
              'f:reason': {}
              'f:status': {}
              'f:type': {}
            'k:{"type":"Progressing"}':
              .: {}
              'f:lastTransitionTime': {}
              'f:lastUpdateTime': {}
              'f:message': {}
              'f:reason': {}
              'f:status': {}
              'f:type': {}
          'f:observedGeneration': {}
          'f:readyReplicas': {}
          'f:replicas': {}
          'f:updatedReplicas': {}
      subresource: status
  namespace: dotnet-app
  labels:
    app: dotnet-app
    app.kubernetes.io/component: dotnet-app
    app.kubernetes.io/instance: dotnet-app
    app.kubernetes.io/name: dotnet-app
    app.kubernetes.io/part-of: dotnet-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dotnet-app
  template:
    metadata:
      labels:
        app: dotnet-app
        deployment: dotnet-app
    spec:
      containers:
        - name: dotnet-app
          image: 'ghcr.io/tal-hason/dotnet-app:v8'
          env:
            - name: PORT
              value: '8080'
          resources:
            limits:
              cpu: 250m
              memory: 256Mi
          imagePullPolicy: Always
      restartPolicy: Always
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 1

